def simple_decorator(func):
    """внешняя функция с аргументом """

    def inner():
        """
        внутренняя функция — модификатор аргумента func
        """
        print('Начало работы декоратора...')
        func()
        print('Декоратор отработал!')

    return inner  # возвращение внутренней функции как объекта


@simple_decorator
def print_hi():
    print(f'Это функция, которую задекорировали')


# здесь выполняется уже декорированная функция
# в этом случае вызов недекорированной функции становится НЕВОЗМОЖЕН
# (синтаксические украшения ограничивают возможности программирования)
print_hi()

# Здесь вызывается функция print_hi. Но на самом деле вызывается декоратор simple_decorator,
# которому передаётся в виде первого аргумента, целевая функция (print_hi).
