def simple_decorator(func):
    """внешняя функция с аргументом """

    def inner(*args, **kwargs):
        """
        внутренняя функция — модификатор аргумента func
        """
        print('Начало работы декоратора...')
        func(*args, **kwargs)
        print('Декоратор отработал!')

    return inner  # возвращение внутренней функции как объекта


@simple_decorator
def print_hi(*args):
    print(f'Это функция, которую задекорировали')
    print(*args)


# здесь выполняется уже декорированная функция
# в этом случае вызов недекорированной функции становится НЕВОЗМОЖЕН
# (синтаксические украшения ограничивают возможности программирования)
print_hi()

# Здесь вызывается функция print_hi. Но на самом деле вызывается декоратор simple_decorator,
# которому передаётся в виде первого аргумента, целевая функция (print_hi).


print_hi('1', '2', '3')
